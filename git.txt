Git Commands

Setting-Up Git
$ git config --global user.name "ivanmanan"
$ git config --global user.email "<email-name>"
$ git config --global credential.helper 'cache --timeout=14400'

Fetch all remote branches
$ git fetch --all --prune

Show all branches
$ git branch -a

Create a branch
$ git branch <branch-name> origin/<branch-name>

Switch to a branch
$ git checkout <branch-name>
$ git checkout -b <create-this-branch>

Pull from the branch
$ git pull

Merge another branch into current branch
$ git merge <other-branch-name>

Push local merge into remote repository
$ git push origin

Check difference between local repository and remote repository
$ git status
$ git diff

Short-hand version
$ git status -s

Add, commit, and push
$ git add <file-name>
$ git add .
$ git commit -m "message"
$ git commit -am "append message"
$ git push

Check all commits
$ git log

Reset local repository
$ git reset --hard head
$ git reset --hard <commit>
$ git revert <commit>

Reverting working copy to most recent commit and remove commit history
$ git reset --hard HEAD
$ git reset --hard HEAD^
$ git reflog expire --expire=now --expire-unreachable=now --all
$ git gc --prune=now

Reverting The Working Copy to an Older Commit
# Resets index to former commit; replace '56e05fced' with your commit code
$ git reset 56e05fced

# Moves pointer back to previous HEAD
$ git reset --soft HEAD@{1}

$ git commit -m "Revert to 56e05fced"

# Updates working copy to reflect the new commit
$ git reset --hard

# Squashing Commits
git checkout YOUR_BRANCH
git reset $(git merge-base master YOUR_BRANCH)
git add -A
git commit -m "Squash all commits"
git push --force


# Removing remote branch
$ git push <remote_name> --delete <branch_name>

# Removing untracked files
git clean -fd .
